{"version":3,"sources":["components/TransactionTable/styles.ts","components/Footer/styles.ts","components/Footer/index.tsx","components/TransactionTable/index.tsx","components/Dashboard/styles.ts","components/Dashboard/index.tsx","assets/logo-uf-ifas.png","assets/background.jpg","components/Header/styles.ts","components/Header/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["Container","styled","div","header","Content","Footer","className","href","target","rel","TransactionTable","useState","data","setData","filter","screenSwitch","setScreenSwitch","windowWidth","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","chartWidth","chartHeight","filteredData","setFilteredData","yearFilter","setYearFilter","companyFilter","setCompanyFilter","speciesFilter","setSpeciesFilter","seasonFilter","setSeasonFilter","useEffect","auxData","season_filtered","dt","season","selectedSeasonFilter","species","selectedSpeciesFilter","length","includes","company","selectedCompanyFilter","year","Number","fetch","then","resp","json","formattedData","map","el","hybrid","companyhybrid","relativematurity","topyield","yield","at35dm","topmilksilage","milksilage","topmilkacre","milkacre","drymatter","crudeprotein","ndf","ndfd","at240undf","adf","starch","sugar","nel","ivdmd","tdn","yielddigestiblendf","diseasedonotuse","disease","donotuselodging","lodging","active","columns","title","field","defaultSort","render","row","handleClickChart","handleClickTable","allYears","allYearsSingle","Array","from","Set","sort","reverse","allCompanies","allCompaniesSingle","allSpecies","allSpeciesSingle","allSeasons","allSeasonsSingle","Button","onClick","variant","style","fontSize","Select","labelId","id","value","label","onChange","e","MenuItem","multiple","icons","Filter","options","filtering","emptyRowsWhenPaging","pageSize","pageSizeOptions","exportButton","exportAllData","padding","tableLayout","headerStyle","backgroundColor","color","rowStyle","index","teste","searchFieldVariant","detailPanel","tooltip","rowData","display","gridTemplateColumns","gap","textAlign","fontWeight","margin","ScatterChart","width","height","top","right","bottom","left","CartesianGrid","strokeDasharray","ZAxis","dataKey","name","unit","XAxis","tickCount","type","domain","YAxis","interval","Tooltip","cursor","Legend","Scatter","fill","main","Dashboard","img2","Header","src","logoImg","alt","GlobalStyle","createGlobalStyle","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82c6129f.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  //Fix Display Here\r\n  /* max-width: 1120px;\r\n  height: 230px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly; */\r\n  \r\n  .custom-filters {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: left;\r\n  }\r\n\r\n  .custom-filter-item {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0.2rem 0rem;\r\n  }\r\n\r\n  .custom-filter-item:last-child{\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  .custom-filter-item p{\r\n    width: 150px;\r\n  }\r\n\r\n  .custom-filter-item .select-filter{\r\n    background-color: #e0e0e0;\r\n    padding-left: 0.5rem;\r\n    padding-right: 0.5rem;\r\n    width: 180px;\r\n  }\r\n\r\n  .show-filter-select-box {\r\n    margin: 0.5rem 0rem;\r\n    width: 170px;\r\n  }\r\n\r\n  table {\r\n    width: 100%;\r\n\r\n    th {\r\n      color: var(--text-title);\r\n      padding: 1rem 0rem;\r\n      text-align: center;\r\n      line-height: 1rem;\r\n      font-weight: 600;\r\n    }\r\n\r\n    td {\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  button {\r\n    margin: 0.5rem;\r\n    font-weight: 600;\r\n    font-family: \"Poppins\", sans-serif;\r\n    color: #000;\r\n  }\r\n\r\n  button.selected {\r\n    margin: 0.5rem;\r\n    font-weight: 600;\r\n    font-family: \"Poppins\", sans-serif;\r\n    color: #fff;\r\n    background-color: var(--green);\r\n  }\r\n\r\n  button.selected {\r\n    margin: 0.5rem;\r\n    font-weight: 600;\r\n    font-family: \"Poppins\", sans-serif;\r\n    color: #fff;\r\n    background-color: var(--green);\r\n  }\r\n\r\n  button.tutorial-button{\r\n    margin-left: 2rem;\r\n    background-color: var(--orange);\r\n  }\r\n  \r\n  .tutorial-button a{\r\n    color: #fafafa;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .tutorial-button:hover{\r\n    background-color: var(--orange-dark);\r\n  }\r\n\r\n  .chart-title {\r\n    text-align: center;\r\n    font-size: 1.25rem;\r\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n    font-weight: 500;\r\n    line-height: 1.6;\r\n    letter-spacing: 0.0075em;\r\n    padding: 0.6rem 0 0.6rem 0;\r\n  }\r\n\r\n  .chart-sub-title {\r\n    text-align: center;\r\n    background-color: var(--orange);\r\n    padding: 0.6rem 0 0.6rem 0;\r\n    font-weight: bold;\r\n    font-size: 0.9rem;\r\n  }\r\n\r\n  .chart-container {\r\n    margin: auto;\r\n  }\r\n\r\n  .chart-box {\r\n    border: 0;\r\n\t  border-radius: 2px;\r\n\t  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  }\r\n\r\n  .top-characteristic {\r\n    color: var(--green);\r\n    font-weight: bold;\r\n    font-size: 0.9rem;\r\n  }\r\n\r\n`;\r\n","import styled from \"styled-components\";\r\nimport img from \"../../assets/background.png\";\r\nimport img2 from \"../../assets/background.jpg\";\r\n\r\n\r\nexport const Container = styled.header`\r\n  \r\n`;\r\n\r\nexport const Content = styled.div`\r\n  .footer {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    margin: 1rem;\r\n  }\r\n`;\r\n","import logoImg from \"../../assets/logo-uf-ifas.png\";\r\nimport { Container, Content } from \"./styles\";\r\n\r\nexport function Footer() {\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        <div className=\"footer\">\r\n          <span>All the information were gathered from the University of Florida Corn Silage and Forage Field Day WebSite.</span>\r\n          <span>\r\n            Visit the{\" \"}\r\n            <b><a href=\"https://programs.ifas.ufl.edu/forage/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {\" \"}\r\n              UF/IFAS Forage Team{\"\"}\r\n            </a></b>{\" and the \"}\r\n            <b><a href=\"https://animal.ifas.ufl.edu/extension/courses/csfd/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {\"\"}\r\n              Corn Silage and Forage Field Day{\"\"}\r\n            </a></b>{\" \"}\r\n            for more information.\r\n          </span>\r\n          <span>Contact your <b><a href=\"https://directory.ifas.ufl.edu/extprogram?pageID=3&p=BB\" target=\"_blank\" rel=\"noopener noreferrer\">Local Extension Agent</a></b> or reach out to us through <b><a href=\"mailto: forages@ifas.ufl.edu\">forages@ifas.ufl.edu</a></b>.</span>\r\n        </div>\r\n      </Content>\r\n    </Container>\r\n  );\r\n}\r\n","import MaterialTable from \"material-table\";\r\nimport { Button, Select, MenuItem } from \"@material-ui/core\";\r\nimport { useLayoutEffect, useEffect, useState } from \"react\";\r\nimport { Container } from \"./styles\";\r\nimport {\r\n  ScatterChart,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  ZAxis,\r\n  Tooltip,\r\n  Legend,\r\n  Scatter,\r\n} from \"recharts\";\r\nimport { Footer } from \"../Footer\";\r\n\r\ninterface dataProps {\r\n  year: number;\r\n  species: string;\r\n  company: string;\r\n  hybrid: string;\r\n  companyhybrid: string;\r\n  season: string;\r\n  relativematurity: number | string | null;\r\n  topyield: number | string | null;\r\n  yield: number | string | null;\r\n  at35dm: number | string | null;\r\n  topmilksilage: number | string | null;\r\n  milksilage: number | string | null;\r\n  topmilkacre: number | string | null;\r\n  milkacre: number | string | null;\r\n  drymatter: number | string | null;\r\n  crudeprotein: number | string | null;\r\n  ndf: number | string | null;\r\n  ndfd: number | string | null;\r\n  at240undf: number | string | null;\r\n  adf: number | string | null;\r\n  starch: number | string | null;\r\n  sugar: number | string | null;\r\n  nel: number | string | null;\r\n  ivdmd: number | string | null;\r\n  tdn: number | string | null;\r\n  yielddigestiblendf: number | string | null;\r\n  diseasedonotuse: number | string | null;\r\n  disease: number | string | null;\r\n  donotuselodging: number | string | null;\r\n  lodging: number | string | null;\r\n  active: number;\r\n}\r\n\r\ninterface chartDataProps {\r\n  company: string;\r\n  hybrid: string;\r\n  totalProduction: number | string;\r\n  milkPerTon: number | string;\r\n  year: number;\r\n  season: string;\r\n  type: string;\r\n}\r\n\r\nfunction useWindowSize() {\r\n  const [size, setSize] = useState([0, 0]);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n  return size;\r\n}\r\n\r\n// function ShowWindowDimensions(props) {\r\n//   const [width, height] = useWindowSize();\r\n//   return <span>Window size: {width} x {height}</span>;\r\n// }\r\n\r\nexport function TransactionTable() {\r\n  const [data, setData] = useState<dataProps[]>([]);\r\n  const [filter, setFilter] = useState<boolean>(false);\r\n  const [chartDataCorn, setChartDataCorn] = useState<chartDataProps[]>([]);\r\n  const [chartDataCornSilage, setChartDataCornSilage] = useState<\r\n    chartDataProps[]\r\n  >([]);\r\n  const [chartDataForageSoghum, setChartDataForageSoghum] = useState<\r\n    chartDataProps[]\r\n  >([]);\r\n  const [chartDataSoghumSudan, setChartDataSoghumSudan] = useState<\r\n    chartDataProps[]\r\n  >([]);\r\n\r\n  const [screenSwitch, setScreenSwitch] = useState<string>(\"table2020\");\r\n\r\n  const windowWidth = useWindowSize()[0];\r\n  const chartWidth = windowWidth > 1120 ? 1120 - 30 : windowWidth - 30;\r\n  const chartHeight = chartWidth < 600 ? 300 : chartWidth / 2;\r\n\r\n  //////////////////////////////////////////\r\n  // Customized Filters\r\n  //////////////////////////////////////////\r\n\r\n  const [filteredData, setFilteredData] = useState<dataProps[]>([]);\r\n  const [yearFilter, setYearFilter] = useState<string>(\"all\");\r\n  const [companyFilter, setCompanyFilter] = useState<string[]>([]);\r\n  const [speciesFilter, setSpeciesFilter] = useState<string>(\"Corn\");\r\n  const [seasonFilter, setSeasonFilter] = useState<string>(\"all\");\r\n\r\n  useEffect(() => {\r\n    const year_filtered = selectedYearFilter(data);\r\n    const company_filtered = selectedCompanyFilter(year_filtered);\r\n    const species_filtered = selectedSpeciesFilter(company_filtered);\r\n    const season_filtered = selectedSeasonFilter(species_filtered);\r\n\r\n    setFilteredData(season_filtered);\r\n  }, [yearFilter, companyFilter, speciesFilter, seasonFilter]);\r\n\r\n  function selectedYearFilter(auxData: dataProps[]): dataProps[] {\r\n    return yearFilter === \"all\"\r\n      ? auxData\r\n      : auxData.filter((dt) => dt.year === Number(yearFilter));\r\n  }\r\n  function selectedCompanyFilter(auxData: dataProps[]): dataProps[] {\r\n    return companyFilter.length === 0\r\n      ? auxData\r\n      : auxData.filter((dt) => companyFilter.includes(dt.company));\r\n  }\r\n  function selectedSpeciesFilter(auxData: dataProps[]): dataProps[] {\r\n    return speciesFilter === \"all\"\r\n      ? auxData\r\n      : auxData.filter((dt) => dt.species === speciesFilter);\r\n  }\r\n  function selectedSeasonFilter(auxData: dataProps[]): dataProps[] {\r\n    return seasonFilter === \"all\"\r\n      ? auxData\r\n      : auxData.filter((dt) => dt.season === seasonFilter);\r\n  }\r\n\r\n  //////////////////////////////////////////\r\n  // End of Customized Filters\r\n  //////////////////////////////////////////\r\n\r\n  // Populating Data Set\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://raw.githubusercontent.com/devfel/forage-hybrid-table/master/src/data/data.json\"\r\n    )\r\n      .then((resp) => resp.json())\r\n      .then((resp) => {\r\n        const formattedData = resp\r\n          .map((el: dataProps) => {\r\n            return {\r\n              // ALL DATA TO BE LOADED BY THE SOFTWARE\r\n              year: el.year,\r\n              species: el.species,\r\n              company: el.company,\r\n              hybrid: el.hybrid,\r\n              companyhybrid: el.company + \" / \" + el.hybrid,\r\n              season: el.season,\r\n              relativematurity:\r\n                el.relativematurity === null || el.relativematurity === \"\"\r\n                  ? -1\r\n                  : Number(el.relativematurity),\r\n              topyield: el.topyield,\r\n              yield:\r\n                el.yield === null || el.yield === \"\" ? -1 : Number(el.yield),\r\n              at35dm:\r\n                el.at35dm === null || el.at35dm === \"\" ? -1 : Number(el.at35dm),\r\n              topmilksilage: el.topmilksilage,\r\n              milksilage:\r\n                el.milksilage === null || el.milksilage === \"\"\r\n                  ? -1\r\n                  : Number(el.milksilage),\r\n              topmilkacre: el.topmilkacre,\r\n              milkacre:\r\n                el.milkacre === null || el.milkacre === \"\"\r\n                  ? -1\r\n                  : Number(el.milkacre),\r\n              drymatter:\r\n                el.drymatter === null || el.drymatter === \"\"\r\n                  ? -1\r\n                  : Number(el.drymatter),\r\n              crudeprotein:\r\n                el.crudeprotein === null || el.crudeprotein === \"\"\r\n                  ? -1\r\n                  : Number(el.crudeprotein),\r\n              ndf: el.ndf === null || el.ndf === \"\" ? -1 : Number(el.ndf),\r\n              ndfd: el.ndfd === null || el.ndfd === \"\" ? -1 : Number(el.ndfd),\r\n              at240undf:\r\n                el.at240undf === null || el.at240undf === \"\"\r\n                  ? -1\r\n                  : Number(el.at240undf),\r\n              adf: el.adf === null || el.adf === \"\" ? -1 : Number(el.adf),\r\n              starch:\r\n                el.starch === null || el.starch === \"\" ? -1 : Number(el.starch),\r\n              sugar:\r\n                el.sugar === null || el.sugar === \"\" ? -1 : Number(el.sugar),\r\n              nel: el.nel === null || el.nel === \"\" ? -1 : Number(el.nel),\r\n              ivdmd:\r\n                el.ivdmd === null || el.ivdmd === \"\" ? -1 : Number(el.ivdmd),\r\n              tdn: el.tdn === null || el.tdn === \"\" ? -1 : Number(el.tdn),\r\n              yielddigestiblendf:\r\n                el.yielddigestiblendf === null || el.yielddigestiblendf === \"\"\r\n                  ? -1\r\n                  : Number(el.yielddigestiblendf),\r\n              diseasedonotuse:\r\n                el.diseasedonotuse === null || el.diseasedonotuse === \"\"\r\n                  ? -1\r\n                  : Number(el.diseasedonotuse),\r\n              disease:\r\n                el.disease === null || el.disease === \"\"\r\n                  ? -1\r\n                  : Number(el.disease),\r\n              donotuselodging:\r\n                el.donotuselodging === null || el.donotuselodging === \"\"\r\n                  ? -1\r\n                  : Number(el.donotuselodging),\r\n              lodging:\r\n                el.lodging === null || el.lodging === \"\"\r\n                  ? -1\r\n                  : Number(el.lodging),\r\n              active: el.active,\r\n            };\r\n          })\r\n          .filter((el: dataProps) => el.active === 1); //FILTER TO LOAD ONLY ELEMENTS WITH ACTIVE === 1\r\n\r\n        setFilteredData(formattedData);\r\n        setData(formattedData);\r\n\r\n        setYearFilter(\"2023\"); //TODO AUTOMATIC SELECT THE MOST CURRENT YEAR IN THE DATA AS DEFAULT.\r\n        setSpeciesFilter(\"Corn\"); //TODO SELECT THE CORRECT VALUE DEPENDING ON THE USER.\r\n        return setData(formattedData);\r\n      });\r\n  }, []);\r\n\r\n  /* TODO - Fix Chart\r\n    // Populating Data Set - Summer Corn (*NO IF ON SEASON)\r\n    useEffect(() => {\r\n      const formattedChartDataCorn = filteredData.map((el: chartDataProps) => {\r\n        if (el.type === \"Corn\") {\r\n          return {\r\n            company: el.company,\r\n            hybrid: el.hybrid,\r\n            totalProduction: el.totalProduction,\r\n            milkPerTon: el.milkPerTon,\r\n            year: el.year,\r\n            season: el.season,\r\n            type: el.type,\r\n          };\r\n        } else\r\n          return {\r\n            company: \"-\",\r\n            hybrid: \"-\",\r\n            totalProduction: \"-\",\r\n            milkPerTon: \"-\",\r\n            year: 0,\r\n            season: \"-\",\r\n            type: \"-\",\r\n          };\r\n      });\r\n  \r\n      setChartDataCorn(formattedChartDataCorn);\r\n    }, [filteredData]);\r\n  \r\n    // Populating Data Set - Spring Corn Silage (*NO IF ON SEASON)\r\n    useEffect(() => {\r\n      const formattedChartDataCorn = filteredData.map((el: chartDataProps) => {\r\n        if (el.type === \"Corn Silage\") {\r\n          return {\r\n            company: el.company,\r\n            hybrid: el.hybrid,\r\n            totalProduction: el.totalProduction,\r\n            milkPerTon: el.milkPerTon,\r\n            year: el.year,\r\n            season: el.season,\r\n            type: el.type,\r\n          };\r\n        } else\r\n          return {\r\n            company: \"-\",\r\n            hybrid: \"-\",\r\n            totalProduction: \"-\",\r\n            milkPerTon: \"-\",\r\n            year: 0,\r\n            season: \"-\",\r\n            type: \"-\",\r\n          };\r\n      });\r\n  \r\n      setChartDataCornSilage(formattedChartDataCorn);\r\n    }, [filteredData]);\r\n  \r\n    // Populating Data Set - Summer Forage Soghum (*NO IF ON SEASON)\r\n    useEffect(() => {\r\n      const formattedChartDataCorn = filteredData.map((el: chartDataProps) => {\r\n        if (el.type === \"Forage Soghum\") {\r\n          return {\r\n            company: el.company,\r\n            hybrid: el.hybrid,\r\n            totalProduction: el.totalProduction,\r\n            milkPerTon: el.milkPerTon,\r\n            year: el.year,\r\n            season: el.season,\r\n            type: el.type,\r\n          };\r\n        } else\r\n          return {\r\n            company: \"-\",\r\n            hybrid: \"-\",\r\n            totalProduction: \"-\",\r\n            milkPerTon: \"-\",\r\n            year: 0,\r\n            season: \"-\",\r\n            type: \"-\",\r\n          };\r\n      });\r\n  \r\n      setChartDataForageSoghum(formattedChartDataCorn);\r\n    }, [filteredData]);\r\n  \r\n    // Populating Data Set - Summer Soghum Sudan (*NO IF ON SEASON)\r\n    useEffect(() => {\r\n      const formattedChartDataCorn = filteredData.map((el: chartDataProps) => {\r\n        if (el.type === \"Soghum Sudan\") {\r\n          return {\r\n            company: el.company,\r\n            hybrid: el.hybrid,\r\n            totalProduction: el.totalProduction,\r\n            milkPerTon: el.milkPerTon,\r\n            year: el.year,\r\n            season: el.season,\r\n            type: el.type,\r\n          };\r\n        } else\r\n          return {\r\n            company: \"-\",\r\n            hybrid: \"-\",\r\n            totalProduction: \"-\",\r\n            milkPerTon: \"-\",\r\n            year: 0,\r\n            season: \"-\",\r\n            type: \"-\",\r\n          };\r\n      });\r\n  \r\n      setChartDataSoghumSudan(formattedChartDataCorn);\r\n    }, [filteredData]);\r\n  END OF CHART DATA POPULATING */\r\n\r\n  // const TableCellStyle = { borderRight: \"1px solid #e5e5e5\" };\r\n  const BoldCellStyle = { fontWeight: 600 };\r\n\r\n  // --- LOOKUPS USED WITH THE OLD FILTERING SYSTEM ---\r\n  // const yearsLookup = {\r\n  //   2020: \"2020\",\r\n  //   2019: \"2019\",\r\n  //   2018: \"2018\",\r\n  //   2017: \"2017\",\r\n  // };\r\n  // const speciesLookup = {\r\n  //   \"Corn Silage\": \"Corn Silage\",\r\n  //   Corn: \"Corn\",\r\n  //   \"Soghum Sudan\": \"Soghum Sudan\",\r\n  //   \"Forage Soghum\": \"Forage Soghum\",\r\n  // };\r\n  // const seasonLookup = {\r\n  //   Spring: \"Spring\",\r\n  //   Summer: \"Summer\"\r\n  // };\r\n  // //{title: \"Year\", field: \"year\", lookup: yearsLookup, filterPlaceholder: \"Select\" },\r\n  // --- ---\r\n\r\n  const columns = [\r\n    // THE MAIN COLUMNS THAT WILL APPEAR IN THE TABLE\r\n    // All Comentaries are columns that will NOT be displayed as main columns.\r\n\r\n    { title: \"Year\", field: \"year\" },\r\n    //{ title: \"Species\", field: \"species\" },\r\n    { title: \"Company\", field: \"company\" },\r\n    { title: \"Hybrid\", field: \"hybrid\" },\r\n    { title: \"Season\", field: \"season\" },\r\n    //{ title: \"Relative Maturity\", field: \"relativematurity\" },\r\n    //{ title: \"Top Yield\", field: \"topyield\" },\r\n    {\r\n      title: \"Yield Dry Tons/acre\",\r\n      field: \"yield\",\r\n      defaultSort: \"desc\",\r\n      render: (row: any) => (\r\n        <div className={row.topyield === \"*\" ? \"top-characteristic\" : \"\"}>\r\n          {row.yield !== -1 ? row.yield : \"n/a\"}\r\n        </div>\r\n      ),\r\n    },\r\n    //{ title: \"35% DM T/A\", field: \"at35dm\" },\r\n    //{ title: \"Top Milk lb/Ton of silage\", field: \"topmilksilage\" },\r\n    {\r\n      title: \"Milk lb/Ton of silage\",\r\n      field: \"milksilage\",\r\n      render: (row: any) => (\r\n        <div className={row.topmilksilage === \"*\" ? \"top-characteristic\" : \"\"}>\r\n          {row.milksilage !== -1 ? row.milksilage : \"n/a\"}\r\n        </div>\r\n      ),\r\n    },\r\n    //{ title: \"Top Milk lb/acre\", field: \"topmilkacre\" },\r\n    {\r\n      title: \"Milk lb/acre\",\r\n      field: \"milkacre\",\r\n      render: (row: any) => (\r\n        <div className={row.topmilkacre === \"*\" ? \"top-characteristic\" : \"\"}>\r\n          {row.milkacre !== -1 ? row.milkacre : \"n/a\"}\r\n        </div>\r\n      ),\r\n    },\r\n    //{ title: \"Dry matter %\", field: \"drymatter\" },\r\n    //{ title: \"Crude protein %\", field: \"crudeprotein\" },\r\n    {\r\n      title: \"NDF %\",\r\n      field: \"ndf\",\r\n      render: (row: any) => <div>{row.ndf !== -1 ? row.ndf : \"n/a\"}</div>,\r\n    },\r\n    {\r\n      title: \"NDFD %\",\r\n      field: \"ndfd\",\r\n      render: (row: any) => <div>{row.ndfd !== -1 ? row.ndfd : \"n/a\"}</div>,\r\n    },\r\n    //{ title: \"240 UNDF\", field: \"at240undf\" },\r\n    //{ title: \"ADF %\", field: \"adf\" },\r\n    {\r\n      title: \"Starch %\",\r\n      field: \"starch\",\r\n      render: (row: any) => <div>{row.starch !== -1 ? row.starch : \"n/a\"}</div>,\r\n    },\r\n    //{ title: \"Sugar %\", field: \"sugar\" },\r\n    //{ title: \"NEL Mcal/lb\", field: \"nel\" },\r\n    //{ title: \"IVDMD %\", field: \"ivdmd\" }, //TODO\r\n    //{ title: \"TDN %\", field: \"tdn\" },\r\n    //{ title: \"Yield digestible NDF, T/A\", field: \"yielddigestiblendf\" },\r\n    //{ title: \"Disease Not to be Used\", field: \"diseasedonotuse\" },\r\n    //{ title: \"Disease %\", field: \"disease\" },\r\n    //{ title: \"Lodging Not to be Used\", field: \"donotuselodging\" },\r\n    //{ title: \"Lodging %\", field: \"lodging\" },\r\n  ];\r\n\r\n  const handleChangeFilter = () => {\r\n    setFilter(!filter);\r\n  };\r\n  const handleClickChart = () => {\r\n    setScreenSwitch(\"chart2020\");\r\n  };\r\n  const handleClickTable = () => {\r\n    setScreenSwitch(\"table2020\");\r\n  };\r\n\r\n  //Variables to populate filters dinamically\r\n  const allYears = data.map((el) => el.year);\r\n  const allYearsSingle = Array.from(new Set(allYears)).sort().reverse();\r\n  const allCompanies = data.map((el) => el.company);\r\n  const allCompaniesSingle = Array.from(new Set(allCompanies)).sort();\r\n  const allSpecies = data.map((el) => el.species);\r\n  const allSpeciesSingle = Array.from(new Set(allSpecies)).sort();\r\n  const allSeasons = data.map((el) => el.season);\r\n  const allSeasonsSingle = Array.from(new Set(allSeasons)).sort();\r\n\r\n  if (screenSwitch === \"table2020\") {\r\n    return (\r\n      <Container>\r\n        <Button\r\n          onClick={handleClickTable}\r\n          variant=\"contained\"\r\n          className=\"selected\"\r\n        >\r\n          Table\r\n        </Button>\r\n        <Button onClick={handleClickChart} variant=\"contained\">\r\n          Chart\r\n        </Button>\r\n\r\n        <Button className=\"tutorial-button\" variant=\"contained\">\r\n          <a\r\n            href=\"https://nwdistrict.ifas.ufl.edu/phag/2022/06/10/introducing-the-new-uf-silage-hybrid-decision-tool/\"\r\n            target=\"_blank\"\r\n          >\r\n            Tutorial\r\n          </a>\r\n        </Button>\r\n\r\n        {/* Not using the original filters\r\n        <div className=\"show-filter-select-box\">\r\n          <FormControlLabel style={{ fontSize: \"20rem\" }} control={<Checkbox checked={filter} onChange={handleChangeFilter} color=\"default\" />} label=\"Hide/Show Filters\" />\r\n        </div>\r\n        */}\r\n\r\n        {/* CUSTOM FILTERS BEGIN - TABLE PAGE */}\r\n        <div className=\"show-filter-select-box\">\r\n          <p style={{ fontSize: \"1rem\" }}>\r\n            {\" \"}\r\n            <b>Available Filters</b>{\" \"}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"custom-filters\">\r\n          <div className=\"custom-species-filter custom-filter-item\">\r\n            <p>Filter by Species:</p>\r\n            <Select\r\n              className=\"select-filter\"\r\n              labelId=\"filter-species-label\"\r\n              id=\"filter-species-id\"\r\n              value={speciesFilter}\r\n              label=\"Species\"\r\n              onChange={(e) => setSpeciesFilter(e.target.value as any)}\r\n            >\r\n              {allSpeciesSingle.map((el) => (\r\n                <MenuItem value={el}>{el}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"custom-year-filter custom-filter-item\">\r\n            <p>Filter by Year:</p>\r\n            <Select\r\n              className=\"select-filter\"\r\n              labelId=\"filter-year-label\"\r\n              id=\"filter-year-id\"\r\n              value={yearFilter}\r\n              label=\"Year\"\r\n              onChange={(e) => setYearFilter(e.target.value as any)}\r\n            >\r\n              <MenuItem value={\"all\"}>\r\n                <em>All</em>\r\n              </MenuItem>\r\n              {allYearsSingle.map((el) => (\r\n                <MenuItem value={el}>{el}</MenuItem>\r\n              ))}\r\n\r\n              {/* //Old Method used to Populate Filters Manually\r\n              <MenuItem value={2020}>2020</MenuItem>\r\n              <MenuItem value={2019}>2019</MenuItem>\r\n              <MenuItem value={2018}>2018</MenuItem>\r\n              <MenuItem value={2017}>2017</MenuItem>\r\n              */}\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"custom-season-filter custom-filter-item\">\r\n            <p>Filter by Season:</p>\r\n            <Select\r\n              className=\"select-filter\"\r\n              labelId=\"filter-season-label\"\r\n              id=\"filter-season-id\"\r\n              value={seasonFilter}\r\n              label=\"Season\"\r\n              onChange={(e) => setSeasonFilter(e.target.value as any)}\r\n            >\r\n              <MenuItem value={\"all\"}>\r\n                <em>All</em>\r\n              </MenuItem>\r\n              {allSeasonsSingle.map((el) => (\r\n                <MenuItem value={el}>{el}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"custom-company-filter custom-filter-item\">\r\n            <p>Filter by Companies:</p>\r\n            <Select\r\n              className=\"select-filter\"\r\n              labelId=\"filter-company-label\"\r\n              id=\"filter-company-id\"\r\n              value={companyFilter}\r\n              multiple\r\n              label=\"Company\"\r\n              onChange={(e) => setCompanyFilter(e.target.value as string[])}\r\n            >\r\n              <MenuItem value={\"Companies\"}>\r\n                <em>Companies</em>\r\n              </MenuItem>\r\n              {allCompaniesSingle.map((el) => (\r\n                <MenuItem value={el}>{el}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n        {/* CUSTOM FILTERS ENDS - TABLE PAGE */}\r\n\r\n        <MaterialTable\r\n          icons={{ Filter: (() => <div></div>) as any }}\r\n          columns={columns as any}\r\n          data={filteredData}\r\n          options={{\r\n            filtering: filter,\r\n            emptyRowsWhenPaging: false,\r\n            pageSize: 10,\r\n            pageSizeOptions: [10, 20, 50, 100],\r\n            exportButton: true,\r\n            exportAllData: true,\r\n            padding: \"dense\",\r\n            tableLayout: \"auto\",\r\n            headerStyle: {\r\n              backgroundColor: \"#FA4616\",\r\n              color: \"#fefefe\",\r\n            },\r\n            rowStyle: (data, index, teste) =>\r\n              index % 2 == 0\r\n                ? {\r\n                    backgroundColor: \"#f8f8f8\",\r\n                    fontSize: \"85%\",\r\n                  }\r\n                : {\r\n                    backgroundColor: \"#fdfdfd\",\r\n                    fontSize: \"85%\",\r\n                  },\r\n            searchFieldVariant: \"outlined\",\r\n          }}\r\n          detailPanel={[\r\n            {\r\n              tooltip: \"Show Details\",\r\n              render: (rowData) => {\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      display: \"grid\",\r\n                      gridTemplateColumns: \"repeat(5, 1fr)\",\r\n                      gap: \"1rem\",\r\n                      fontSize: \"1rem\",\r\n                      padding: \"1rem\",\r\n                      textAlign: \"center\",\r\n                      color: \"white\",\r\n                      backgroundColor: \"#0021A5\",\r\n                    }}\r\n                  >\r\n                    {/*** SECONDARY CHARACTERISTICS ***/}\r\n                    <p>\r\n                      Relative Maturity:{\" \"}\r\n                      {rowData.relativematurity !== -1\r\n                        ? rowData.relativematurity\r\n                        : \"n/a\"}\r\n                    </p>\r\n                    <p>\r\n                      Estimated Silage T/A:{\" \"}\r\n                      {/* ESTIMATED SILAGE @ 35%DM (TONS/ACRE) */}\r\n                      {rowData.at35dm !== -1 ? rowData.at35dm : \"n/a\"}\r\n                    </p>\r\n                    <p>\r\n                      Dry matter %:{\" \"}\r\n                      {rowData.drymatter !== -1 ? rowData.drymatter : \"n/a\"}\r\n                    </p>\r\n                    <p>\r\n                      Crude protein %:{\" \"}\r\n                      {rowData.crudeprotein !== -1\r\n                        ? rowData.crudeprotein\r\n                        : \"n/a\"}\r\n                    </p>\r\n                    <p>\r\n                      240 UNDF:{\" \"}\r\n                      {rowData.at240undf !== -1 ? rowData.at240undf : \"n/a\"}\r\n                    </p>\r\n                    <p>ADF %: {rowData.adf !== -1 ? rowData.adf : \"n/a\"}</p>\r\n                    <p>\r\n                      Sugar %: {rowData.sugar !== -1 ? rowData.sugar : \"n/a\"}\r\n                    </p>\r\n                    <p>\r\n                      NEL Mcal/lb: {rowData.nel !== -1 ? rowData.nel : \"n/a\"}\r\n                    </p>\r\n                    <p>\r\n                      IVDMD %: {rowData.ivdmd !== -1 ? rowData.ivdmd : \"n/a\"}\r\n                    </p>\r\n                    <p>TDN %: {rowData.tdn !== -1 ? rowData.tdn : \"n/a\"}</p>\r\n                    <p>\r\n                      Yield digestible NDF, T/A:{\" \"}\r\n                      {rowData.yielddigestiblendf !== -1\r\n                        ? rowData.yielddigestiblendf\r\n                        : \"n/a\"}\r\n                    </p>\r\n                    <p>\r\n                      Disease %:{\" \"}\r\n                      {rowData.disease !== -1 ? rowData.disease : \"n/a\"}\r\n                    </p>\r\n                    <p>\r\n                      Lodging %:{\" \"}\r\n                      {rowData.lodging !== -1 ? rowData.lodging : \"n/a\"}\r\n                    </p>\r\n                  </div>\r\n                );\r\n              },\r\n            },\r\n          ]}\r\n          title=\"UF Silage Hybrid Trial Table\"\r\n        />\r\n        <span style={{ color: \"darkblue\", fontWeight: \"bold\", margin: \"1rem\" }}>\r\n          Blue and bold characteristics in the table mean it was a top performer\r\n          within that season and year.\r\n        </span>\r\n        <br></br>\r\n        <Footer />\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container>\r\n        <Button onClick={handleClickTable} variant=\"contained\">\r\n          Table\r\n        </Button>\r\n        <Button\r\n          onClick={handleClickChart}\r\n          variant=\"contained\"\r\n          className=\"selected\"\r\n        >\r\n          Chart\r\n        </Button>\r\n\r\n        <Button className=\"tutorial-button\" variant=\"contained\">\r\n          <a href=\"#\">Tutorial</a>\r\n        </Button>\r\n\r\n        {/* CUSTOM FILTERS BEGIN - CHART PAGE */}\r\n        <div className=\"show-filter-select-box\">\r\n          <p style={{ fontSize: \"1rem\" }}>\r\n            {\" \"}\r\n            <b>Available Filters</b>{\" \"}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"custom-filters\">\r\n          <div className=\"custom-species-filter custom-filter-item\">\r\n            <p>Filter by Species:</p>\r\n            <Select\r\n              className=\"select-filter\"\r\n              labelId=\"filter-species-label\"\r\n              id=\"filter-species-id\"\r\n              value={speciesFilter}\r\n              label=\"Species\"\r\n              onChange={(e) => setSpeciesFilter(e.target.value as any)}\r\n            >\r\n              {allSpeciesSingle.map((el) => (\r\n                <MenuItem value={el}>{el}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"custom-year-filter custom-filter-item\">\r\n            <p>Filter by Year:</p>\r\n            <Select\r\n              className=\"select-filter\"\r\n              labelId=\"filter-year-label\"\r\n              id=\"filter-year-id\"\r\n              value={yearFilter}\r\n              label=\"Year\"\r\n              onChange={(e) => setYearFilter(e.target.value as any)}\r\n            >\r\n              <MenuItem value={\"all\"}>\r\n                <em>All</em>\r\n              </MenuItem>\r\n              {allYearsSingle.map((el) => (\r\n                <MenuItem value={el}>{el}</MenuItem>\r\n              ))}\r\n\r\n              {/* //Old Method used to Populate Filters Manually\r\n              <MenuItem value={2020}>2020</MenuItem>\r\n              <MenuItem value={2019}>2019</MenuItem>\r\n              <MenuItem value={2018}>2018</MenuItem>\r\n              <MenuItem value={2017}>2017</MenuItem>\r\n              */}\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"custom-season-filter custom-filter-item\">\r\n            <p>Filter by Season:</p>\r\n            <Select\r\n              className=\"select-filter\"\r\n              labelId=\"filter-season-label\"\r\n              id=\"filter-season-id\"\r\n              value={seasonFilter}\r\n              label=\"Season\"\r\n              onChange={(e) => setSeasonFilter(e.target.value as any)}\r\n            >\r\n              <MenuItem value={\"all\"}>\r\n                <em>All</em>\r\n              </MenuItem>\r\n              {allSeasonsSingle.map((el) => (\r\n                <MenuItem value={el}>{el}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"custom-company-filter custom-filter-item\">\r\n            <p>Filter by Companies:</p>\r\n            <Select\r\n              className=\"select-filter\"\r\n              labelId=\"filter-company-label\"\r\n              id=\"filter-company-id\"\r\n              value={companyFilter}\r\n              multiple\r\n              label=\"Company\"\r\n              onChange={(e) => setCompanyFilter(e.target.value as string[])}\r\n            >\r\n              <MenuItem value={\"Companies\"}>\r\n                <em>Companies</em>\r\n              </MenuItem>\r\n              {allCompaniesSingle.map((el) => (\r\n                <MenuItem value={el}>{el}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n        {/* CUSTOM FILTERS ENDS - CHART PAGE */}\r\n        <div className=\"chart-box\">\r\n          <div className=\"chart-title\">UF Silage Hybrid Trial Chart</div>\r\n          <div className=\"chart-sub-title\" style={{ color: \"#FAFAFA\" }}>\r\n            Yield Dry Matter (DM tons/acre) X Milk Production (lb milk/ton){\" \"}\r\n          </div>\r\n\r\n          <ScatterChart\r\n            className=\"chart-container\"\r\n            width={chartWidth}\r\n            height={chartHeight}\r\n            margin={{ top: 20, right: 30, bottom: 10, left: 0 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"1 1\" />\r\n            <ZAxis dataKey=\"companyhybrid\" name=\"Company/Hybrid\" unit=\"\" />\r\n            <XAxis\r\n              tickCount={4}\r\n              dataKey=\"yield\"\r\n              type=\"number\"\r\n              domain={[1, 16]}\r\n              name=\"Total Production\"\r\n              unit=\" lb DM/A\"\r\n            />\r\n            <YAxis\r\n              interval={0}\r\n              tickCount={4}\r\n              dataKey=\"milksilage\"\r\n              type=\"number\"\r\n              domain={[1400, 4100]}\r\n              name=\"Milk Production\"\r\n              unit=\" mk/ton\"\r\n            />\r\n            <Tooltip cursor={{ strokeDasharray: \"10 10\" }} />\r\n            <Legend />\r\n            <Scatter name={speciesFilter} data={filteredData} fill=\"#22884C\" />\r\n          </ScatterChart>\r\n        </div>\r\n        <Footer />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.main`\r\n  max-width: 1280px;\r\n  margin: 0 auto;\r\n  padding: 0.5rem 1rem;\r\n  background-color: #fff;\r\n`;\r\n","import { TransactionTable } from \"../TransactionTable\";\r\nimport { Container } from \"./styles\";\r\n\r\nexport function Dashboard() {\r\n  return (\r\n    <Container>\r\n      <TransactionTable />\r\n    </Container>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo-uf-ifas.4f5deef3.png\";","export default __webpack_public_path__ + \"static/media/background.08602167.jpg\";","import styled from \"styled-components\";\r\nimport img from \"../../assets/background.png\";\r\nimport img2 from \"../../assets/background.jpg\";\r\n\r\n\r\nexport const Container = styled.header`\r\n  background: var(--dark-green);\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  max-width: 1280px;\r\n  height: 230px;\r\n  margin: 0 auto;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n\r\n  background-image: url(${img2});\r\n\r\n  img {\r\n    opacity: 0.95;\r\n    width: 160px;\r\n    height: auto;\r\n    margin-left: 1rem;\r\n    margin-right: 1rem;\r\n    border-radius: 0.4rem;\r\n    background-color: #fefefe;\r\n\r\n    transition: filter 0.4s;\r\n    &:hover {\r\n      filter: brightness(1.1);\r\n    }\r\n  }\r\n\r\n  button {\r\n    margin-left: 1rem;\r\n    margin-right: 1rem;\r\n    font-size: 1.5rem;\r\n    font-weight: 600;\r\n    background-color: #fefefe;\r\n    opacity: 0.9;\r\n\r\n    border: 0;\r\n    padding: 1rem 2rem;\r\n    border-radius: 0.4rem;\r\n\r\n    transition: filter 0.2s;\r\n    &:hover {\r\n      filter: brightness(1.2);\r\n    }\r\n  }\r\n`;\r\n","import logoImg from \"../../assets/logo-uf-ifas.png\";\r\nimport { Container, Content } from \"./styles\";\r\n\r\nexport function Header() {\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        <a href=\"https://animal.ifas.ufl.edu/extension/courses/csfd/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <img src={logoImg} alt=\"CSFD Logo\" />\r\n        </a>\r\n        <button type=\"button\">\r\n          <a href=\"https://animal.ifas.ufl.edu/extension/courses/csfd/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            UF Silage Hybrid Decision Tool\r\n          </a>\r\n        </button>\r\n      </Content>\r\n    </Container>\r\n  );\r\n}\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n:root {\r\n    --red: #e52e4d;\r\n    --blue: #5429cc;\r\n    --green: #0021A5;\r\n    --orange: #fa4616;\r\n    --orange-dark: #fa1616;\r\n\r\n    --dark-green: #0021A5;\r\n    --light-green: #d2f8d2;\r\n\r\n    --blue-light: #6933ff;\r\n\r\n    --text-title: #363f5f;\r\n    --text-body: #969cb3;\r\n\r\n    --background: #f0f2f5;\r\n    --shape: #FFFFFF;\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nhtml {\r\n    // default font-size (6.25% per pixel)\r\n    font-size: 87.5%; //14px\r\n\r\n    @media (max-width: 1080px) {\r\n        font-size: 75%; //13px\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        font-size: 62.5%; //12px\r\n    }\r\n}\r\n\r\nbody {\r\n    background: var(--background);\r\n    -webkit-font-smoothing: antialiased;\r\n}\r\n\r\nbody, input, textarea, button {\r\n    font-family: \"Poppins\", sans-serif;\r\n    font-weight: 400;\r\n}\r\n\r\nh1, h2, h3, h4, h5, h6, strong, th {\r\n    font-family: \"Poppins\", sans-serif;\r\n    font-weight: 600;\r\n}\r\n\r\nbutton {\r\n    cursor: pointer;\r\n}\r\n\r\n[disabled] {\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n}\r\n\r\n`;\r\n","import { Dashboard } from \"./components/Dashboard\";\r\nimport { Header } from \"./components/Header\";\r\nimport { GlobalStyle } from \"./styles/global\";\r\n\r\nexport function App() {\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Header />\r\n      <Dashboard />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { App } from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}